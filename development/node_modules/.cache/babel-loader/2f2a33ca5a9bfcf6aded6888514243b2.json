{"ast":null,"code":"var _jsxFileName = \"/home/jaakko/gitprojut/FS/development/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Header, Button, Statistic } from \"./Components\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  let all = good + neutral + bad;\n  let avarage = all / 3;\n  let positive = (good / all * 100).toString() + \" %\";\n  const stats = [[\"good\", good], [\"neutral\", neutral], [\"bad\", bad], [\"all\", all], [\"avarage\", avarage], [\"positive\", positive]];\n\n  const clickHandler = (usestate, setter) => {\n    return () => setter(usestate + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        handler: clickHandler(good, setGood),\n        name: \"good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handler: clickHandler(neutral, setNeutral),\n        name: \"neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handler: clickHandler(bad, setBad),\n        name: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      name: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\nexport default App;\n/*\nRefaktoroi sovelluksesi siten, että tilastojen näyttäminen on eriytetty oman komponentin Statistics vastuulle. \nSovelluksen tila säilyy edelleen juurikomponentissa App.\n\nMuuta sovellusta siten, että numeeriset tilastot näytetään ainoastaan, jos palautteita on jo annettu:\n\ntilastojen näyttäminen on eriytetty oman komponentin Statistics vastuulle. Sovelluksen tila säilyy edelleen juurikomponentissa App.\nButton vastaa yksittäistä palautteenantonappia. sinne syötetään usestate joka syötetään siel cli9ckhandler funktioon\nStatisticLine huolehtii tilastorivien, esim. keskiarvon näyttämisestä\n\nToteuta tilastojen näyttäminen HTML:n taulukkona \n\nAPP sisältää \"good, neutral, bad\" usestatet ja muuttujat avarage ja positive. Samoin otsikot.\nBUTTON vastaa yksittäistä palautteenantonappia. tänne syötetään setStatet\nSTATISTIC sisältää taulukon sarakkeet ja STATISTICLINE sisältää taulukon solut (2)\n\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Button","Statistic","useState","App","good","setGood","neutral","setNeutral","bad","setBad","all","avarage","positive","toString","stats","clickHandler","usestate","setter"],"sources":["/home/jaakko/gitprojut/FS/development/src/App.js"],"sourcesContent":["import { Header, Button, Statistic } from \"./Components\"\nimport { useState } from 'react'\n\nconst App = () => {\n\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  let all = good + neutral + bad\n  let avarage = all / 3\n  let positive = (good / all * 100).toString() + \" %\"\n\n  const stats = [\n    [\"good\", good],\n    [\"neutral\", neutral],\n    [\"bad\", bad],\n    [\"all\", all],\n    [\"avarage\", avarage],\n    [\"positive\", positive]\n  ]\n\n  const clickHandler = (usestate, setter) => {\n    return () => setter(usestate + 1)\n  }\n\n  return (\n    <div>\n      <Header name=\"give feedback\" />\n      <div>\n        <Button handler={clickHandler(good, setGood)} name=\"good\" />\n        <Button handler={clickHandler(neutral, setNeutral)} name=\"neutral\" />\n        <Button handler={clickHandler(bad, setBad)} name=\"bad\" />\n      </div>\n      <Header name=\"statistics\" />\n      <div></div>\n    </div>\n  )\n}\n\nexport default App\n\n/*\nRefaktoroi sovelluksesi siten, että tilastojen näyttäminen on eriytetty oman komponentin Statistics vastuulle. \nSovelluksen tila säilyy edelleen juurikomponentissa App.\n\nMuuta sovellusta siten, että numeeriset tilastot näytetään ainoastaan, jos palautteita on jo annettu:\n\ntilastojen näyttäminen on eriytetty oman komponentin Statistics vastuulle. Sovelluksen tila säilyy edelleen juurikomponentissa App.\nButton vastaa yksittäistä palautteenantonappia. sinne syötetään usestate joka syötetään siel cli9ckhandler funktioon\nStatisticLine huolehtii tilastorivien, esim. keskiarvon näyttämisestä\n\nToteuta tilastojen näyttäminen HTML:n taulukkona \n\nAPP sisältää \"good, neutral, bad\" usestatet ja muuttujat avarage ja positive. Samoin otsikot.\nBUTTON vastaa yksittäistä palautteenantonappia. tänne syötetään setStatet\nSTATISTIC sisältää taulukon sarakkeet ja STATISTICLINE sisältää taulukon solut (2)\n\n\n*/"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,SAAzB,QAA0C,cAA1C;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEhB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,CAAD,CAA9B;EAEA,IAAIQ,GAAG,GAAGN,IAAI,GAAGE,OAAP,GAAiBE,GAA3B;EACA,IAAIG,OAAO,GAAGD,GAAG,GAAG,CAApB;EACA,IAAIE,QAAQ,GAAG,CAACR,IAAI,GAAGM,GAAP,GAAa,GAAd,EAAmBG,QAAnB,KAAgC,IAA/C;EAEA,MAAMC,KAAK,GAAG,CACZ,CAAC,MAAD,EAASV,IAAT,CADY,EAEZ,CAAC,SAAD,EAAYE,OAAZ,CAFY,EAGZ,CAAC,KAAD,EAAQE,GAAR,CAHY,EAIZ,CAAC,KAAD,EAAQE,GAAR,CAJY,EAKZ,CAAC,SAAD,EAAYC,OAAZ,CALY,EAMZ,CAAC,UAAD,EAAaC,QAAb,CANY,CAAd;;EASA,MAAMG,YAAY,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;IACzC,OAAO,MAAMA,MAAM,CAACD,QAAQ,GAAG,CAAZ,CAAnB;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,IAAI,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,wBACE,QAAC,MAAD;QAAQ,OAAO,EAAED,YAAY,CAACX,IAAD,EAAOC,OAAP,CAA7B;QAA8C,IAAI,EAAC;MAAnD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QAAQ,OAAO,EAAEU,YAAY,CAACT,OAAD,EAAUC,UAAV,CAA7B;QAAoD,IAAI,EAAC;MAAzD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,MAAD;QAAQ,OAAO,EAAEQ,YAAY,CAACP,GAAD,EAAMC,MAAN,CAA7B;QAA4C,IAAI,EAAC;MAAjD;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE,QAAC,MAAD;MAAQ,IAAI,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QAPF,eAQE;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAnCD;;GAAMN,G;;KAAAA,G;AAqCN,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}