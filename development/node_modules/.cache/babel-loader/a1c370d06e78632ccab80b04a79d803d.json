{"ast":null,"code":"var _jsxFileName = \"/home/jaakko/gitprojut/FS/development/src/Components.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.part, \" \", props.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Part;\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = Header;\n\nconst Content = props => {\n  let myKeyes = props.content.keys;\n  props.content.forEach((value, key) => myKeys.push(key));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: myKeyes.map(key => /*#__PURE__*/_jsxDEV(Part, {\n      part: key,\n      exercises: props.content.get(key)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 35\n    }, this))\n  }, void 0, false);\n};\n\n_c3 = Content;\n\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", props.sum]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_c4 = Total;\nexport { Header, Content, Total };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Part\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");","map":{"version":3,"names":["Part","props","part","exercises","Header","course","Content","myKeyes","content","keys","forEach","value","key","myKeys","push","map","get","Total","sum"],"sources":["/home/jaakko/gitprojut/FS/development/src/Components.js"],"sourcesContent":["\nconst Part = (props) => {\n    return <p>{props.part} {props.exercises}</p>\n}\n\nconst Header = (props) => {\n    return <h1>{props.course}</h1>\n}\n\nconst Content = (props) => {\n    let myKeyes = props.content.keys\n    props.content.forEach((value, key) => myKeys.push(key));\n\n    return (\n        <>\n            {myKeyes.map((key) => <Part part={key} exercises={props.content.get(key)} />)}\n        </>\n    )\n}\n\nconst Total = (props) => {\n    return <p>Number of exercises {props.sum}</p>\n}\n\n\nexport { Header, Content, Total }"],"mappings":";;;;AACA,MAAMA,IAAI,GAAIC,KAAD,IAAW;EACpB,oBAAO;IAAA,WAAIA,KAAK,CAACC,IAAV,OAAiBD,KAAK,CAACE,SAAvB;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAFD;;KAAMH,I;;AAIN,MAAMI,MAAM,GAAIH,KAAD,IAAW;EACtB,oBAAO;IAAA,UAAKA,KAAK,CAACI;EAAX;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAFD;;MAAMD,M;;AAIN,MAAME,OAAO,GAAIL,KAAD,IAAW;EACvB,IAAIM,OAAO,GAAGN,KAAK,CAACO,OAAN,CAAcC,IAA5B;EACAR,KAAK,CAACO,OAAN,CAAcE,OAAd,CAAsB,CAACC,KAAD,EAAQC,GAAR,KAAgBC,MAAM,CAACC,IAAP,CAAYF,GAAZ,CAAtC;EAEA,oBACI;IAAA,UACKL,OAAO,CAACQ,GAAR,CAAaH,GAAD,iBAAS,QAAC,IAAD;MAAM,IAAI,EAAEA,GAAZ;MAAiB,SAAS,EAAEX,KAAK,CAACO,OAAN,CAAcQ,GAAd,CAAkBJ,GAAlB;IAA5B;MAAA;MAAA;MAAA;IAAA,QAArB;EADL,iBADJ;AAKH,CATD;;MAAMN,O;;AAWN,MAAMW,KAAK,GAAIhB,KAAD,IAAW;EACrB,oBAAO;IAAA,mCAAwBA,KAAK,CAACiB,GAA9B;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAFD;;MAAMD,K;AAKN,SAASb,MAAT,EAAiBE,OAAjB,EAA0BW,KAA1B"},"metadata":{},"sourceType":"module"}