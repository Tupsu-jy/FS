{"ast":null,"code":"var _jsxFileName = \"/home/jaakko/gitprojut/FS/development/src/Components.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.part, \" \", props.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Part;\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = Header;\n\nconst Content = props => {\n  let myKeys = [];\n  props.content.forEach((value, key) => myKeys.push(key));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.course.parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      part: part.name,\n      exercises: part.name.exercises\n    }, part.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 47\n    }, this))\n  }, void 0, false);\n};\n\n_c3 = Content;\n\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", props.sum]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_c4 = Total;\nexport { Header, Content, Total };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Part\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");","map":{"version":3,"names":["Part","props","part","exercises","Header","course","Content","myKeys","content","forEach","value","key","push","parts","map","name","Total","sum"],"sources":["/home/jaakko/gitprojut/FS/development/src/Components.js"],"sourcesContent":["\nconst Part = (props) => {\n    return <p>{props.part} {props.exercises}</p>\n}\n\nconst Header = (props) => {\n    return <h1>{props.course}</h1>\n}\n\nconst Content = (props) => {\n    let myKeys = [];\n    props.content.forEach((value, key) => myKeys.push(key));\n\n    return (\n        <>\n            {props.course.parts.map((part) => <Part key={part.name} part={part.name} exercises={part.name.exercises} />)}\n        </>\n    )\n}\n\nconst Total = (props) => {\n    return <p>Number of exercises {props.sum}</p>\n}\n\n\nexport { Header, Content, Total }"],"mappings":";;;;AACA,MAAMA,IAAI,GAAIC,KAAD,IAAW;EACpB,oBAAO;IAAA,WAAIA,KAAK,CAACC,IAAV,OAAiBD,KAAK,CAACE,SAAvB;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAFD;;KAAMH,I;;AAIN,MAAMI,MAAM,GAAIH,KAAD,IAAW;EACtB,oBAAO;IAAA,UAAKA,KAAK,CAACI;EAAX;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAFD;;MAAMD,M;;AAIN,MAAME,OAAO,GAAIL,KAAD,IAAW;EACvB,IAAIM,MAAM,GAAG,EAAb;EACAN,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsB,CAACC,KAAD,EAAQC,GAAR,KAAgBJ,MAAM,CAACK,IAAP,CAAYD,GAAZ,CAAtC;EAEA,oBACI;IAAA,UACKV,KAAK,CAACI,MAAN,CAAaQ,KAAb,CAAmBC,GAAnB,CAAwBZ,IAAD,iBAAU,QAAC,IAAD;MAAsB,IAAI,EAAEA,IAAI,CAACa,IAAjC;MAAuC,SAAS,EAAEb,IAAI,CAACa,IAAL,CAAUZ;IAA5D,GAAWD,IAAI,CAACa,IAAhB;MAAA;MAAA;MAAA;IAAA,QAAjC;EADL,iBADJ;AAKH,CATD;;MAAMT,O;;AAWN,MAAMU,KAAK,GAAIf,KAAD,IAAW;EACrB,oBAAO;IAAA,mCAAwBA,KAAK,CAACgB,GAA9B;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAFD;;MAAMD,K;AAKN,SAASZ,MAAT,EAAiBE,OAAjB,EAA0BU,KAA1B"},"metadata":{},"sourceType":"module"}